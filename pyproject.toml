[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[project]
name = "fastapply"
version = "0.1.0"
description = "FastApply MCP"
requires-python = ">=3.13"
dependencies = [
    "mcp[cli]>=1.14.1",
    "openai>=1.108.0",
    "structlog>=25.4.0",
    "python-dotenv>=1.1.1",
    "ast-grep-py>=0.25.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "pytest-mock>=3.15.1",
    "ruff>=0.13.1",
    "mypy>=1.18.2",
]

[dependency-groups]
dev = [
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "pytest-mock>=3.15.1",
    "ruff>=0.13.1",
    "mypy>=1.18.2",
]

[project.scripts]
fastapply = "fastapply.main:main"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers --cov=src --cov-report=html:htmlcov/ --cov-report=term-missing --cov-report=xml:coverage.xml"
markers = [
    "performance: marks tests as performance tests",
    "load: marks tests as load tests",
    "security: marks tests as security tests",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "slow: marks tests as slow running"
]
minversion = "8.0"

[tool.coverage.run]
source = ["fastapply.main:main"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "pass",
    "except ImportError:",
]

[tool.ruff]
line-length = 140
target-version = "py313"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W"]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
